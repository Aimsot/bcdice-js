diff --git a/src/bcdiceCore.rb b/src/bcdiceCore.rb
index b555846..641d4a7 100755
--- a/src/bcdiceCore.rb
+++ b/src/bcdiceCore.rb
@@ -175,7 +175,7 @@ class BCDice
   end
 
   def printErrorMessage(e)
-    sendMessageToOnlySender("error " + e.to_s + $@.join("\n"))
+    sendMessageToOnlySender("error " + e.to_s + e.backtrace.join("\n"))
   end
 
   def recieveMessageCatched(nick_e, tnick)
@@ -866,7 +866,7 @@ class BCDice
     string, secret, count, swapMarker = getD66Infos(dice)
     unless  string.nil?
       value = getD66ValueByMarker(swapMarker)
-      diceText = (value / 10).to_s + "," + (value % 10).to_s
+      diceText = value.div(10).to_s + "," + (value % 10).to_s
       return value, diceText
     end
 
@@ -1232,8 +1232,9 @@ class BCDice
     nick ||= @nick_e
     nick = nick.upcase
 
-    /[_\d]*(.+)[_\d]*/ =~ nick
-    nick = Regexp.last_match(1) # Nick端の数字はカウンター変わりに使われることが多いので除去
+    if /[_\d]*(.+)[_\d]*/ =~ nick
+      nick = Regexp.last_match(1) # Nick端の数字はカウンター変わりに使われることが多いので除去
+    end
 
     return nick
   end
diff --git a/src/diceBot/Amadeus.rb b/src/diceBot/Amadeus.rb
index dbd3fe9..3a47b42 100644
--- a/src/diceBot/Amadeus.rb
+++ b/src/diceBot/Amadeus.rb
@@ -117,7 +117,7 @@ INFO_MESSAGE_TEXT
     return "ファンブル！" if  dice_n == 1
     return "スペシャル！" if  dice_n >= special_n
 
-    success = @@bcdice.check_hit(total_n, signOfInequality, diff)
+    success = bcdice.check_hit(total_n, signOfInequality, diff)
     return "成功" if success >= 1
 
     return "失敗"
diff --git a/src/diceBot/Amadeus_Korean.rb b/src/diceBot/Amadeus_Korean.rb
index 56ff96b..c6f4929 100644
--- a/src/diceBot/Amadeus_Korean.rb
+++ b/src/diceBot/Amadeus_Korean.rb
@@ -118,7 +118,7 @@ INFO_MESSAGE_TEXT
     return "펌블！" if dice_n == 1
     return "스페셜！" if dice_n >= special_n
 
-    success = @@bcdice.check_hit(total_n, signOfInequality, diff)
+    success = bcdice.check_hit(total_n, signOfInequality, diff)
     return "성공" if success >= 1
 
     return "실패"
diff --git a/src/diceBot/BarnaKronika.rb b/src/diceBot/BarnaKronika.rb
index 079ced5..6effe13 100644
--- a/src/diceBot/BarnaKronika.rb
+++ b/src/diceBot/BarnaKronika.rb
@@ -12,12 +12,12 @@ class BarnaKronika < DiceBot
   # ダイスボット設定後に行う処理
   # @return [void]
   def postSet
-    if @@bcdice
-      @@bcdice.cardTrader.set1Deck2Jokers
+    if bcdice
+      bcdice.cardTrader.set1Deck2Jokers
       # 手札の他のカード置き場
-      @@bcdice.cardTrader.card_place = 0
+      bcdice.cardTrader.card_place = 0
       # 場札のタップ処理の必要があるか？
-      @@bcdice.cardTrader.canTapCard = false
+      bcdice.cardTrader.canTapCard = false
     end
   end
 
diff --git a/src/diceBot/ChaosFlare.rb b/src/diceBot/ChaosFlare.rb
index 1507530..f455dbd 100644
--- a/src/diceBot/ChaosFlare.rb
+++ b/src/diceBot/ChaosFlare.rb
@@ -4,12 +4,12 @@ class ChaosFlare < DiceBot
   # ダイスボット設定後に行う処理
   # @return [void]
   def postSet
-    if @@bcdice
-      @@bcdice.cardTrader.set2Decks2Jokers
+    if bcdice
+      bcdice.cardTrader.set2Decks2Jokers
       # 手札の他のカード置き場
-      @@bcdice.cardTrader.card_place = 0
+      bcdice.cardTrader.card_place = 0
       # 場札のタップ処理の必要があるか？
-      @@bcdice.cardTrader.canTapCard = false
+      bcdice.cardTrader.canTapCard = false
     end
   end
 
diff --git a/src/diceBot/Cthulhu7th.rb b/src/diceBot/Cthulhu7th.rb
index cf9f85b..2c330c9 100644
--- a/src/diceBot/Cthulhu7th.rb
+++ b/src/diceBot/Cthulhu7th.rb
@@ -342,7 +342,7 @@ INFO_MESSAGE_TEXT
   end
 
   def getSetOfBullet(diff)
-    bullet_set_count = diff / 10
+    bullet_set_count = diff.div(10)
 
     if (diff >= 1) && (diff < 10)
       bullet_set_count = 1 # 技能値が9以下での最低値保障処理
@@ -352,7 +352,7 @@ INFO_MESSAGE_TEXT
   end
 
   def getHitBulletCountBase(diff, bullet_set_count)
-    hit_bullet_count_base = (bullet_set_count / 2)
+    hit_bullet_count_base = bullet_set_count.div(2)
 
     if (diff >= 1) && (diff < 10)
       hit_bullet_count_base = 1 # 技能値9以下での最低値保障
diff --git a/src/diceBot/Cthulhu7th_ChineseTraditional.rb b/src/diceBot/Cthulhu7th_ChineseTraditional.rb
index 33f6865..7d12d7a 100644
--- a/src/diceBot/Cthulhu7th_ChineseTraditional.rb
+++ b/src/diceBot/Cthulhu7th_ChineseTraditional.rb
@@ -344,7 +344,7 @@ INFO_MESSAGE_TEXT
   end
 
   def getSetOfBullet(diff)
-    bullet_set_count = diff / 10
+    bullet_set_count = diff.div(10)
 
     if (diff >= 1) && (diff < 10)
       bullet_set_count = 1 # 技能值９以下的最低限度保障處理
@@ -354,7 +354,7 @@ INFO_MESSAGE_TEXT
   end
 
   def getHitBulletCountBase(diff, bullet_set_count)
-    hit_bullet_count_base = (bullet_set_count / 2)
+    hit_bullet_count_base = bullet_set_count.div(2)
 
     if (diff >= 1) && (diff < 10)
       hit_bullet_count_base = 1 # 技能值９以下的最低限度保障處理
diff --git a/src/diceBot/Cthulhu7th_Korean.rb b/src/diceBot/Cthulhu7th_Korean.rb
index 5cfb984..c01cff3 100644
--- a/src/diceBot/Cthulhu7th_Korean.rb
+++ b/src/diceBot/Cthulhu7th_Korean.rb
@@ -340,7 +340,7 @@ INFO_MESSAGE_TEXT
   end
 
   def getSetOfBullet(diff)
-    bullet_set_count = diff / 10
+    bullet_set_count = diff.div(10)
 
     if (diff >= 1) && (diff < 10)
       bullet_set_count = 1 # 기능 수치가 9 이하일 때의 최저수치 보장 처리
@@ -350,7 +350,7 @@ INFO_MESSAGE_TEXT
   end
 
   def getHitBulletCountBase(diff, bullet_set_count)
-    hit_bullet_count_base = (bullet_set_count / 2)
+    hit_bullet_count_base = bullet_set_count.div(2)
 
     if (diff >= 1) && (diff < 10)
       hit_bullet_count_base = 1 # 기능 수치가 9 이하일 때의 최저수치 보장
diff --git a/src/diceBot/CthulhuTech.rb b/src/diceBot/CthulhuTech.rb
index ba83a8c..92b2bd4 100644
--- a/src/diceBot/CthulhuTech.rb
+++ b/src/diceBot/CthulhuTech.rb
@@ -36,7 +36,7 @@ INFO_MESSAGE_TEXT
   end
 
   def check_nD10_nomalTest(total_n, _dice_n, _signOfInequality, diff, dice_cnt, _dice_max, n1, _n_max)
-    if n1 >= (dice_cnt / 2 + 0.9).to_i
+    if n1 >= (dice_cnt.div(2) + 0.9).to_i
       return " ＞ ファンブル"
     end
 
diff --git a/src/diceBot/DetatokoSaga.rb b/src/diceBot/DetatokoSaga.rb
index 54a97fa..3a35391 100644
--- a/src/diceBot/DetatokoSaga.rb
+++ b/src/diceBot/DetatokoSaga.rb
@@ -155,6 +155,8 @@ INFO_MESSAGE_TEXT
   end
 
   def getModifyText(operator, value)
+    return '' if value == 0
+
     operatorText =
       case operator
       when "+"
diff --git a/src/diceBot/DetatokoSaga_Korean.rb b/src/diceBot/DetatokoSaga_Korean.rb
index 012d285..69bcd6d 100644
--- a/src/diceBot/DetatokoSaga_Korean.rb
+++ b/src/diceBot/DetatokoSaga_Korean.rb
@@ -155,6 +155,8 @@ INFO_MESSAGE_TEXT
   end
 
   def getModifyText(operator, value)
+    return '' if value == 0
+
     operatorText =
       case operator
       when "+"
diff --git a/src/diceBot/DiceBot.rb b/src/diceBot/DiceBot.rb
index 8a352c0..0a4c097 100644
--- a/src/diceBot/DiceBot.rb
+++ b/src/diceBot/DiceBot.rb
@@ -228,7 +228,7 @@ class DiceBot
       debug('call rollDiceCommand command', command)
       result, secret_flg = rollDiceCommand(command)
     rescue StandardError => e
-      debug("executeCommand exception", e.to_s, $@.join("\n"))
+      debug("executeCommand exception", e.to_s, e.backtrace.join("\n"))
     end
 
     debug('rollDiceCommand result', result)
@@ -470,13 +470,13 @@ class DiceBot
         item, value = get_table_by_d66(table)
         value = value.to_i
         output = item[1]
-        diceText = (value / 10).to_s + "," + (value % 10).to_s
+        diceText = value.div(10).to_s + "," + (value % 10).to_s
         [output, value, diceText]
       when 'D66S'
         table = getTableInfoFromExtraTableText(table, 21)
         output, value = get_table_by_d66_swap(table)
         value = value.to_i
-        diceText = (value / 10).to_s + "," + (value % 10).to_s
+        diceText = value.div(10).to_s + "," + (value % 10).to_s
         [output, value, diceText]
       else
         raise "invalid dice Type #{command}"
diff --git a/src/diceBot/DiceBotLoader.rb b/src/diceBot/DiceBotLoader.rb
index 6855865..a092291 100644
--- a/src/diceBot/DiceBotLoader.rb
+++ b/src/diceBot/DiceBotLoader.rb
@@ -229,9 +229,8 @@ class DiceBotLoader
   # @return [DiceBot]
   def loadDiceBot
     @filenames.each do |filename|
-      require(
-        File.expand_path(filename, File.dirname(__FILE__))
-      )
+      require_path = File.expand_path(filename, File.dirname(__FILE__))
+      require(require_path)
     end
 
     Object.const_get(@diceBotClass).new
diff --git a/src/diceBot/DoubleCross.rb b/src/diceBot/DoubleCross.rb
index 2cc0712..350b848 100644
--- a/src/diceBot/DoubleCross.rb
+++ b/src/diceBot/DoubleCross.rb
@@ -196,7 +196,7 @@ INFO_MESSAGE_TEXT
         output += "#{subtotal}[#{dice_dat[1]}]"
         total_n += subtotal
 
-        break unless @@bcdice.isReRollAgain(dice_cnt, round)
+        break unless bcdice.isReRollAgain(dice_cnt, round)
       end
     end
 
diff --git a/src/diceBot/Dracurouge.rb b/src/diceBot/Dracurouge.rb
index baee0b3..53243f1 100644
--- a/src/diceBot/Dracurouge.rb
+++ b/src/diceBot/Dracurouge.rb
@@ -85,7 +85,7 @@ MESSAGETEXT
     oneCount = countTargetDice(diceList, 1)
     sixCount = countTargetDice(diceList, 6)
 
-    gloryDiceCount = (oneCount / 2) + (sixCount / 2)
+    gloryDiceCount = oneCount.div(2) + sixCount.div(2)
     return gloryDiceCount
   end
 
diff --git a/src/diceBot/Dracurouge_Korean.rb b/src/diceBot/Dracurouge_Korean.rb
index 9f71651..a761a01 100644
--- a/src/diceBot/Dracurouge_Korean.rb
+++ b/src/diceBot/Dracurouge_Korean.rb
@@ -87,7 +87,7 @@ MESSAGETEXT
     oneCount = countTargetDice(diceList, 1)
     sixCount = countTargetDice(diceList, 6)
 
-    gloryDiceCount = (oneCount / 2) + (sixCount / 2)
+    gloryDiceCount = oneCount.div(2) + sixCount.div(2)
     return gloryDiceCount
   end
 
@@ -142,7 +142,7 @@ MESSAGETEXT
     type2 = %w{영주	근위	방랑	현자	사냥꾼	야수}
     type2_indexTexts = %w{F G R W J N}
 
-    tensValue = number.to_i / 10
+    tensValue = number.to_i.div(10)
     isBefore = (tensValue < 4)
     type = (isBefore ? type1 : type2)
     indexTexts = (isBefore ? type1_indexTexts : type2_indexTexts)
diff --git a/src/diceBot/EarthDawn3.rb b/src/diceBot/EarthDawn3.rb
index 1dcf2a0..8f931df 100644
--- a/src/diceBot/EarthDawn3.rb
+++ b/src/diceBot/EarthDawn3.rb
@@ -145,7 +145,7 @@ INFO_MESSAGE_TEXT
 
     result = [  0, 0, 0, 0, 0, 0, 0]
 
-    loopCount = (overStep / stepRythm.size)
+    loopCount = overStep.div(stepRythm.size)
 
     loopCount.times do
       addStepToResult(result, baseStepInfo)
diff --git a/src/diceBot/EarthDawn4.rb b/src/diceBot/EarthDawn4.rb
index c4be6c4..c85e90d 100644
--- a/src/diceBot/EarthDawn4.rb
+++ b/src/diceBot/EarthDawn4.rb
@@ -191,7 +191,7 @@ INFO_MESSAGE_TEXT
 
     result = [  0, 0, 0, 0, 0, 0, 0]
 
-    loopCount = (overStep / stepRythm.size)
+    loopCount = overStep.div(stepRythm.size)
 
     loopCount.times do
       addStepToResult(result, overBounusStep)
@@ -223,7 +223,7 @@ INFO_MESSAGE_TEXT
       return "失敗"
     end
 
-    level = (diff / 5) + 1
+    level = diff.div(5) + 1
 
     return "成功 レベル：#{level}"
   end
diff --git a/src/diceBot/EclipsePhase.rb b/src/diceBot/EclipsePhase.rb
index d0f9b31..b09d16a 100644
--- a/src/diceBot/EclipsePhase.rb
+++ b/src/diceBot/EclipsePhase.rb
@@ -23,7 +23,7 @@ INFO_MESSAGE_TEXT
     return '' unless signOfInequality == '<='
 
     diceValue = total_n % 100 # 出目00は100ではなく00とする
-    dice_ten_place = diceValue / 10
+    dice_ten_place = diceValue.div(10)
     dice_one_place = diceValue % 10
 
     debug("total_n", total_n)
diff --git a/src/diceBot/FilledWith.rb b/src/diceBot/FilledWith.rb
index 9b247b7..cc0fc4d 100644
--- a/src/diceBot/FilledWith.rb
+++ b/src/diceBot/FilledWith.rb
@@ -1532,7 +1532,7 @@ MESSAGETEXT
           '『白銀の猛将』ジェネラル(CL55/ネームド)1匹([命中]+4、あらゆる致傷力+20、[HP]+500)'
         ]],
       ]
-      case event / 100
+      case event.div(100)
       when 1
         areaText = "洞窟"
       when 2
diff --git a/src/diceBot/GardenOrder.rb b/src/diceBot/GardenOrder.rb
index b3c9dfa..088bcc8 100644
--- a/src/diceBot/GardenOrder.rb
+++ b/src/diceBot/GardenOrder.rb
@@ -50,12 +50,12 @@ INFO_MESSAGE_TEXT
   def get_critical_border(critical_border_text, success_rate)
     return critical_border_text.to_i unless critical_border_text.nil?
 
-    critical_border = [success_rate / 5, 1].max
+    critical_border = [success_rate.div(5), 1].max
     return critical_border
   end
 
   def check_roll_repeat_attack(success_rate, repeat_count, critical_border)
-    success_rate_per_one = success_rate / repeat_count
+    success_rate_per_one = success_rate.div(repeat_count)
 
     check_roll(success_rate_per_one, critical_border)
   end
diff --git a/src/diceBot/GurpsFW.rb b/src/diceBot/GurpsFW.rb
index 88a084b..52cc2f9 100644
--- a/src/diceBot/GurpsFW.rb
+++ b/src/diceBot/GurpsFW.rb
@@ -341,7 +341,7 @@ INFO_MESSAGE_TEXT
       tableName = "財宝テーブル"
       diff = Regexp.last_match(1)
       depth = Regexp.last_match(2).to_i
-      num = depth / 10
+      num = depth.div(10)
       if num >= 6
         num = 5
       end
diff --git a/src/diceBot/HatsuneMiku.rb b/src/diceBot/HatsuneMiku.rb
index 16f6155..99ed48a 100644
--- a/src/diceBot/HatsuneMiku.rb
+++ b/src/diceBot/HatsuneMiku.rb
@@ -134,7 +134,7 @@ INFO_MESSAGE_TEXT
     return "ファンブル" if  dice_n == 1
     return "スペシャル" if  dice_n >= special_n
 
-    success = @@bcdice.check_hit(total_n, signOfInequality, diff)
+    success = bcdice.check_hit(total_n, signOfInequality, diff)
     return "成功" if success >= 1
 
     return "失敗"
diff --git a/src/diceBot/IthaWenUa.rb b/src/diceBot/IthaWenUa.rb
index 1dd4f10..22ead4a 100644
--- a/src/diceBot/IthaWenUa.rb
+++ b/src/diceBot/IthaWenUa.rb
@@ -23,7 +23,7 @@ MESSAGETEXT
     return '' unless signOfInequality == '<='
 
     diceValue = total_n % 100
-    dice0 = diceValue / 10 # 10の位を代入
+    dice0 = diceValue.div(10) # 10の位を代入
     dice1 = diceValue % 10 # 1の位を代入
 
     debug("total_n", total_n)
diff --git a/src/diceBot/LogHorizon.rb b/src/diceBot/LogHorizon.rb
index 70d1316..527ece4 100644
--- a/src/diceBot/LogHorizon.rb
+++ b/src/diceBot/LogHorizon.rb
@@ -476,7 +476,7 @@ MESSAGETEXT
   end
 
   def getTableByRank(rank, tables)
-    index = (rank - 1) / 5
+    index = (rank - 1).div(5)
 
     index = [0, index].max
     index = [index, (tables.size - 1)].min
diff --git a/src/diceBot/LogHorizon_Korean.rb b/src/diceBot/LogHorizon_Korean.rb
index 6f71fd3..3f52519 100644
--- a/src/diceBot/LogHorizon_Korean.rb
+++ b/src/diceBot/LogHorizon_Korean.rb
@@ -315,7 +315,7 @@ MESSAGETEXT
   end
 
   def getTableByRank(rank, tables)
-    index = (rank - 1) / 5
+    index = (rank - 1).div(5)
 
     index = [0, index].max
     index = [index, (tables.size - 1)].min
diff --git a/src/diceBot/MetalHeadExtream.rb b/src/diceBot/MetalHeadExtream.rb
index 69a502d..4dbba4b 100644
--- a/src/diceBot/MetalHeadExtream.rb
+++ b/src/diceBot/MetalHeadExtream.rb
@@ -585,7 +585,7 @@ MESSAGETEXT
                    ['H', '(HW)'],
                    ['O', '(MO)']]
 
-    index = damageInfos.index { |type, _text| type == damageStage }
+    index = damageInfos.index { |i| i.first == damageStage }
     return nil if index == -1
 
     damageIndex = index + 1
@@ -906,7 +906,7 @@ MESSAGETEXT
   # 端数が使いたいので、parren_killer未使用
   def get_value(originalValue, calculateText)
     result = originalValue.to_f
-    calculateArray = calculateText.scan(%r{[\*/]\d*}) # 修正値を分割して配列へ
+    calculateArray = (calculateText || '').scan(%r{[\*/]\d*}) # 修正値を分割して配列へ
     calculateArray.each do |i| # 配列内ループで補正率を計算
       i =~ %r{([\*/])(\d*)}i
       result *= Regexp.last_match(2).to_i if Regexp.last_match(1) == '*'
diff --git a/src/diceBot/NinjaSlayer.rb b/src/diceBot/NinjaSlayer.rb
index 6b8c14c..9688475 100644
--- a/src/diceBot/NinjaSlayer.rb
+++ b/src/diceBot/NinjaSlayer.rb
@@ -48,14 +48,14 @@ MESSAGETEXT
   # 難易度の値の正規表現
   DIFFICULTY_VALUE_RE = /UH|[2-6KENH]/i.freeze
   # 難易度の正規表現
-  DIFFICULTY_RE = /\[(#{DIFFICULTY_VALUE_RE})\]|@(#{DIFFICULTY_VALUE_RE})/io.freeze
+  DIFFICULTY_RE = /(\[(#{DIFFICULTY_VALUE_RE.source})\]|@(#{DIFFICULTY_VALUE_RE.source}))/io.freeze
 
   # 通常判定の正規表現
-  NJ_RE = /\ANJ(\d+)#{DIFFICULTY_RE}?\z/io.freeze
+  NJ_RE = /\ANJ(\d+)#{DIFFICULTY_RE.source}?\z/io.freeze
   # 回避判定の正規表現
-  EV_RE = %r{\AEV(\d+)#{DIFFICULTY_RE}?(?:/(\d+))?\z}io.freeze
+  EV_RE = %r{\AEV(\d+)#{DIFFICULTY_RE.source}?(?:/(\d+))?\z}io.freeze
   # 近接攻撃の正規表現
-  AT_RE = /\AAT(\d+)#{DIFFICULTY_RE}?\z/io.freeze
+  AT_RE = /\AAT(\d+)#{DIFFICULTY_RE.source}?\z/io.freeze
 
   # バラバラロール結果の "(" の前までの先頭部分
   B_ROLL_RESULT_HEAD_RE = /\A[^(]+/.freeze
@@ -78,7 +78,7 @@ MESSAGETEXT
     m = NJ_RE.match(str)
     return str unless m
 
-    return bRollCommand(m[1], integerValueOfDifficulty(m[2] || m[3]))
+    bRollCommand(m[1], integerValueOfDifficulty(m[3] || m[4]))
   end
 
   def rollDiceCommand(command)
@@ -115,8 +115,8 @@ MESSAGETEXT
   # @return [EV]
   def parseEV(m)
     num = m[1].to_i
-    difficulty = integerValueOfDifficulty(m[2] || m[3])
-    targetValue = m[4] && m[4].to_i
+    difficulty = integerValueOfDifficulty(m[3] || m[4])
+    targetValue = m[5] && m[5].to_i
 
     return EV.new(num, difficulty, targetValue)
   end
@@ -126,7 +126,7 @@ MESSAGETEXT
   # @return [AT]
   def parseAT(m)
     num = m[1].to_i
-    difficulty = integerValueOfDifficulty(m[2] || m[3])
+    difficulty = integerValueOfDifficulty(m[3] || m[4])
 
     return AT.new(num, difficulty)
   end
diff --git a/src/diceBot/Postman.rb b/src/diceBot/Postman.rb
index 4763ab6..6bdf3d8 100644
--- a/src/diceBot/Postman.rb
+++ b/src/diceBot/Postman.rb
@@ -55,11 +55,11 @@ MESSAGETEXT
         diceCount = 2 if diceCount < 2
 
         modify = (Regexp.last_match(2) || 0).to_i
-        modifyAddString = Regexp.last_match(3)
+        modifyAddString = (Regexp.last_match(3) || '')
 
         type = (Regexp.last_match(6) || '')
         target = (Regexp.last_match(7) || 0).to_i
-        targetAddString = Regexp.last_match(8)
+        targetAddString = (Regexp.last_match(8) || '')
 
         modify_list = modifyAddString.scan(/[+-]\d+/)
         modify_list.each { |i| modify += i.to_i }
diff --git a/src/diceBot/Ryutama.rb b/src/diceBot/Ryutama.rb
index 590545e..6a9478c 100644
--- a/src/diceBot/Ryutama.rb
+++ b/src/diceBot/Ryutama.rb
@@ -84,14 +84,14 @@ INFO_MESSAGE_TEXT
 
     diceBase = dice1
 
-    dice1 = diceBase / 10
+    dice1 = diceBase.div(10)
     dice2 = diceBase % 10
 
     if isValidDice(dice1, dice2)
       return dice1, dice2
     end
 
-    dice1 = diceBase / 100
+    dice1 = diceBase.div(100)
     dice2 = diceBase % 100
 
     if isValidDice(dice1, dice2)
diff --git a/src/diceBot/ShinMegamiTenseiKakuseihen.rb b/src/diceBot/ShinMegamiTenseiKakuseihen.rb
index 479ed39..bce1448 100644
--- a/src/diceBot/ShinMegamiTenseiKakuseihen.rb
+++ b/src/diceBot/ShinMegamiTenseiKakuseihen.rb
@@ -51,7 +51,7 @@ INFO_MESSAGE_TEXT
 
     value %= 100
 
-    dice1 = value / 10
+    dice1 = value.div(10)
     dice2 = value % 10
 
     return [dice1, dice2]
diff --git a/src/diceBot/Skynauts.rb b/src/diceBot/Skynauts.rb
index 68e50d0..f4be751 100644
--- a/src/diceBot/Skynauts.rb
+++ b/src/diceBot/Skynauts.rb
@@ -97,7 +97,7 @@ MESSAGETEXT
     debug("移動修正", bonus)
 
     total, = roll(1, 6)
-    movePointBase = (total / 2) <= 0 ? 1 : (total / 2)
+    movePointBase = total.div(2) <= 0 ? 1 : total.div(2)
     movePoint = movePointBase + bonus
     debug("移動エリア数", movePoint)
 
diff --git a/src/diceBot/SwordWorld2_0.rb b/src/diceBot/SwordWorld2_0.rb
index 7cc3dc3..add8f85 100644
--- a/src/diceBot/SwordWorld2_0.rb
+++ b/src/diceBot/SwordWorld2_0.rb
@@ -153,9 +153,9 @@ INFO_MESSAGE_TEXT
     debug("check_nD6")
     result = super(total_n, dice_n, signOfInequality, diff, dice_cnt, dice_max, n1, n_max)
 
-    return result unless  result == ""
+    return result unless result == ""
 
-    string = @@bcdice.getOriginalMessage
+    string = bcdice.getOriginalMessage
 
     superSuccessValue = 41
 
diff --git a/src/diceBot/Warhammer.rb b/src/diceBot/Warhammer.rb
index c60aabc..6d93666 100644
--- a/src/diceBot/Warhammer.rb
+++ b/src/diceBot/Warhammer.rb
@@ -53,10 +53,10 @@ INFO_MESSAGE_TEXT
     return '' unless signOfInequality == "<="
 
     if total_n <= diff
-      return " ＞ 成功(成功度#{((diff - total_n) / 10)})"
+      return " ＞ 成功(成功度#{(diff - total_n).div(10)})"
     end
 
-    return " ＞ 失敗(失敗度#{((total_n - diff) / 10)})"
+    return " ＞ 失敗(失敗度#{(total_n - diff).div(10)})"
   end
 
   ####################            WHFRP関連          ########################
diff --git a/src/utils/ArithmeticEvaluator.rb b/src/utils/ArithmeticEvaluator.rb
index ad4cfa6..4876a07 100644
--- a/src/utils/ArithmeticEvaluator.rb
+++ b/src/utils/ArithmeticEvaluator.rb
@@ -71,7 +71,7 @@ class ArithmeticEvaluator
     when :roundOff
       return (left.to_f / right).round
     else
-      return left / right
+      return left.div(right)
     end
   end
 
